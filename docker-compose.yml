version: '2'
services:
  # 1.默认: 9000端口  访问地址：http://服务器IP:9000/    ->  修改IP即可
  nginx:
    hostname: nginx
    # only [a-zA-Z0-9][a-zA-Z0-9_.-] are allowed
    container_name: nginx-1.17
    # 2.解决容器的依赖、启动先后的问题
    depends_on:
      - mysql
      - redis_master
      - redis_slave
    # 3.选择自己镜像构建的方式 -> image: 远程仓库拉取 or build:上下文构建(可对项目代码进行)
    #    image: tomcat:8.5.35-jre8
    build: ./nginx
    # 4.可通过./tomcat/conf/server.xml设置服务端口
    ports:
      - 9000:80
      - 9005:443
    # 5.定义IP网络
    networks:
      staticneta:
        ipv4_address: 172.20.1.2
    #    - 80:80
    #    - 443:443
    # 6.挂载目录
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/logs:/usr/local/nginx/logs
      - ./nginx/conf:/usr/local/nginx/conf
    # 8.生产环境配置：指定容器退出后的重启策略为始终重启, 对保持服务始终运行十分有效
    restart: always
  # 1.默认: 放置ROOT目录 9001端口  访问地址：http://服务器IP:9001/    ->  修改IP即可
  tomcat:
    hostname: tomcat
    # only [a-zA-Z0-9][a-zA-Z0-9_.-] are allowed
    container_name: tomcat-9-jre8
    # 2.解决容器的依赖、启动先后的问题
    depends_on:
      - mysql
      - redis_master
      - redis_slave
    # 3.选择自己镜像构建的方式 -> image: 远程仓库拉取 or build:上下文构建(可对项目代码进行)
    #    image: tomcat:8.5.35-jre8
    build: ./tomcat
    # 4.可通过./tomcat/conf/server.xml设置服务端口
    ports:
      - 9001:8080
    # 5.定义IP网络
    networks:
      staticneta:
        ipv4_address: 172.20.1.3
    #    - 80:80
    #    - 443:443
    # 6.挂载目录
    volumes:
      - ./tomcat/webapps:/usr/local/tomcat/webapps
      - ./tomcat/logs:/usr/local/tomcat/logs
      - ./tomcat/conf:/usr/local/tomcat/conf
    # 7.设置环境变量: 时区与编码
    #   你可以使用数组或字典两种格式
    #   只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据
    environment:
      JAVA_OPTS: -Dfile.encoding=UTF-8
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    # 8.生产环境配置：指定容器退出后的重启策略为始终重启, 对保持服务始终运行十分有效
    restart: always
  #    restart: unless-stopped
  #====================================================================================================================#
  #================================================== mysql install ===================================================#
  #====================================================================================================================#
    # 1.默认: 端口号：9002
    # 1.默认: 端口号：9002
  mysql:
    hostname: mysql
    container_name: mysql-8
    # 1. 选择自己镜像构建的方式 -> image: 远程仓库拉取 or build:上下文构建
    #    image: mysql:8
    build: ./mysql
    ports:
      - 9002:3306
    # 2. 定义IP网络
    networks:
      staticneta:
        ipv4_address: 172.20.1.4
    environment:
      # 3. 设置数据库密码等
      MYSQL_ROOT_PASSWORD: yourpassword
      #      MYSQL_DATABASE: xxx
      #      MYSQL_USER: xxx
      #      MYSQL_PASSWORD: 123456
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    volumes:
      # 4. 指定自定义的mysql配置文件./mysql/conf/custom.cnf启动数据库
      - ./mysql/conf:/etc/my.conf.d
      # 5. 挂载数据存储目录,持久化数据库.
      - ./mysql/data:/var/lib/mysql
      # 6. 挂载数据库定时自动备份目录,见 ./mysql : Dockerfile - > backup.sh ★★★ 填写：备份数据库名/用户名/密码 ★★★
      - ./mysql/backup:/backup

    # 7. 挂载日志：通用日志,错误日志,慢日志,二进制日志等 -> 具体可见./mysql/conf/custom.cnf

    # 8. 数据恢复
    # 1>进入容器
    ## docker exec -it e7 bash
    # 2>binlog 日志内容解析
    ## mysqlbinlog --no-defaults /var/lib/mysql/mysql-bin.000004
    # 3>找到恢复到时间点
    ## mysqlbinlog --no-defaults --stop-datetime='2018-12-12 15:33:29' /var/lib/mysql/mysql-bin.000004 |mysql -uroot -p

    # 9. TODO 主从复制

    # 9. TODO 读写分离

    # 生产环境配置：指定容器退出后的重启策略为始终重启, 对保持服务始终运行十分有效
    restart: always
  #    restart: unless-stopped
  #====================================================================================================================#
  #================================================== redis install ===================================================#
  #====================================================================================================================#
    # 1.默认: 端口号：9003
  redis_master:
    hostname: redis-master
    container_name: redis-master-5
    # 1.选择自己镜像构建的方式 -> image: 远程仓库拉取 or build:上下文构建
    #    image: redis:5-alpine
    build: ./redis-master
    ports:
      - 9003:9003
    # 2.定义IP网络
    networks:
      staticneta:
        ipv4_address: 172.20.1.5
    volumes:
      - ./redis-master/data:/data
      # 3.设置redis配置文件：./redis/conf/redis.conf 默认设置内容如下：
      ### requirepass yourpassword
      ### bind: 0.0.0.0
      ### loglevel notice
      ### logfile "redis.log"
      ### port 9003
      - ./redis-master/conf/redis.conf:/usr/local/etc/redis/redis.conf
    # 生成容器后要执行的命令
    command: redis-server /usr/local/etc/redis/redis.conf
    # 4.设置环境变量: 时区与编码
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    # 5.生产环境配置：指定容器退出后的重启策略为始终重启, 对保持服务始终运行十分有效
    restart: always

    # 1.默认: 端口号：9004
    # 1.默认: 端口号：9004
  redis_slave:
    hostname: redis-slave
    container_name: redis-slave-5
    # 1.选择自己镜像构建的方式 -> image: 远程仓库拉取 or build:上下文构建
    #image: redis:5-alpine
    build: ./redis-slave
    ports:
      - 9004:9004
    # 2.定义IP网络
    networks:
      staticneta:
        ipv4_address: 172.20.1.6
    volumes:
      - ./redis-slave/data:/data
      # 3.设置redis配置文件：./redis/conf/redis.conf 默认设置内容如下：
      ### requirepass yourpassword
      ### bind: 0.0.0.0
      ### loglevel notice
      ### logfile "redis.log"
      ### port 9004
      ### masterauth yourpassword
      ### slaveof redis_master 9003
      - ./redis-slave/conf/redis.conf:/usr/local/etc/redis/redis.conf
    # 生成容器后要执行的命令
    command: redis-server /usr/local/etc/redis/redis.conf
    # 4.设置环境变量: 时区与编码
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    # 5.生产环境配置：指定容器退出后的重启策略为始终重启, 对保持服务始终运行十分有效
    restart: always
# 定义网络
networks:
  staticneta:
    ipam:
      config:
        - subnet: 172.20.1.0/24
          gateway: 172.20.1.1